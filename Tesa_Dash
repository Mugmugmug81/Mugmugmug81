from dash import dcc, html, dash_table
import requests
import dash

# Initialize the Dash app
app = dash.Dash(__name__)

# Fetch data from the NASA API
API_KEY = "p4xCFCHufvXqbZwd4NAV5EEkQAxm6GytdV3dm9AV"
URL = "https://api.nasa.gov/planetary/apod"
params = {
    "api_key": API_KEY,
    "count": 100
}
response = requests.get(URL, params=params)
data = response.json()

# Define the layout of the app
app.layout = html.Div(
    children=[
        html.H1("Pretend this is Groupon Data (I can only access free APIs now)/Howdy y'all! I done found some issues with thesfe deals sugar!", style={"textAlign": "center"}),  # Title
        html.H3(f"Total Deals Reviewed: {len(data)}", style={"textAlign": "center"}),  # Display count of URLs
        dash_table.DataTable(
            id='image-table',
            columns=[
                {"name": "Index", "id": "number"},
                {"name": "Property", "id": "title"},
                {"name": "Purchasable Y/N (can't do that due to data)", "id": "description"},
                {"name": "Deal Page", "id": "image_url"},
            ],
            data=[{
                "number": i + 1,  # Row number
                "title": item.get('title', 'No Title Available'),
                "description": item.get('explanation', 'No Description Available'),
                "image_url": item.get('url', 'No URL Available')  # Safely get the URL or display a message if missing
            } for i, item in enumerate(data)],
            
            # Center all text in the table
            style_table={'height': '800px', 'overflowY': 'auto'},  # Set table height
            style_cell={'padding': '10px', 'textAlign': 'center'},  # Center cell content
            style_header={'backgroundColor': 'rgb(230, 230, 230)', 'fontWeight': 'bold', 'textAlign': 'center'},  # Header styling
            style_data={'whiteSpace': 'normal', 'height': 'auto'},  # Text wrapping for data
        ),
    ],
    style={'display': 'flex', 'flexDirection': 'column', 'alignItems': 'center'}  # Center entire page content
)

# Run the server
app.run(debug=True)
